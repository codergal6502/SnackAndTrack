// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SnackAndTrack.Data;

namespace SnackAndTrack.Migrations
{
    [DbContext(typeof(SnackAndTrackDbContext))]
    [Migration("20250724195730_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SnackAndTrack.Models.FoodItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("SnackAndTrack.Models.FoodItemNutrient", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FoodItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nutrient")
                        .HasColumnType("text");

                    b.Property<short?>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.ToTable("FoodItemNutrients");
                });

            modelBuilder.Entity("SnackAndTrack.Models.FoodItemNutrient", b =>
                {
                    b.HasOne("SnackAndTrack.Models.FoodItem", null)
                        .WithMany("FoodItemNutrients")
                        .HasForeignKey("FoodItemId");
                });

            modelBuilder.Entity("SnackAndTrack.Models.FoodItem", b =>
                {
                    b.Navigation("FoodItemNutrients");
                });
#pragma warning restore 612, 618
        }
    }
}
